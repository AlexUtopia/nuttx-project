diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/arch/avr/include/arch.h src/nuttx/arch/avr/include/arch.h
--- tmp/nuttx/arch/avr/include/arch.h	2015-04-28 10:43:44.247540714 +0300
+++ src/nuttx/arch/avr/include/arch.h	2015-04-30 09:53:38.485675338 +0300
@@ -45,11 +45,20 @@
  ****************************************************************************/
 
 #include <nuttx/config.h>
+#include <avr/pgmspace.h>
 
 /****************************************************************************
  * Pre-processor Definitions
  ****************************************************************************/
 
+/** AVR MCU flash definitions */
+#define ARCH_FLASH						PROGMEM
+#define ARCH_FLASH_STRING(s)			PSTR(s)
+#define ARCH_FLASH_GET_UINT8(addr)		pgm_read_byte(addr)
+#define ARCH_FLASH_GET_UINT16(addr)		pgm_read_word(addr)
+#define ARCH_FLASH_GET_UINT32(addr)		pgm_read_dword(addr)
+#define ARCH_FLASH_GET_FLOAT(addr)		pgm_read_float(addr)
+
 /****************************************************************************
  * Inline functions
  ****************************************************************************/
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/arch/avr/src/atmega/Make.defs src/nuttx/arch/avr/src/atmega/Make.defs
--- tmp/nuttx/arch/avr/src/atmega/Make.defs	2015-04-28 10:43:44.255540719 +0300
+++ src/nuttx/arch/avr/src/atmega/Make.defs	2015-04-28 10:58:30.027341746 +0300
@@ -46,7 +46,7 @@ CMN_CSRCS += up_initialstate.c up_interr
 CMN_CSRCS += up_mdelay.c up_modifyreg8.c up_modifyreg16.c up_modifyreg32.c
 CMN_CSRCS += up_puts.c up_releasepending.c up_releasestack.c
 CMN_CSRCS += up_reprioritizertr.c up_schedulesigaction.c up_sigdeliver.c
-CMN_CSRCS += up_stackframe.c up_udelay.c up_unblocktask.c up_usestack.c
+CMN_CSRCS += up_stackframe.c up_udelay.c up_unblocktask.c up_usestack.c up_w1_uart.c
 
 # Configuration-dependent common files
 
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/arch/avr/src/avr/up_w1_uart.c src/nuttx/arch/avr/src/avr/up_w1_uart.c
--- tmp/nuttx/arch/avr/src/avr/up_w1_uart.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/arch/avr/src/avr/up_w1_uart.c	2015-04-30 15:35:20.550436664 +0300
@@ -0,0 +1,275 @@
+#include <stdint.h>
+#include <stdio.h> //FIXME
+#include <stdlib.h> //FIXME
+
+#include <avr/io.h>
+#include <avr/power.h>
+
+#include <nuttx/kmalloc.h>
+#include <nuttx/w1/w1.h>
+#include <arch/board/board.h>
+
+//
+// Private Definitions
+//
+
+/**  */
+#define W1_UART_RESET_MESSAGE			(0xF0)
+#define W1_UART_READ_BIT_MESSAGE		(0xFF)
+#define W1_UART_WRITE_BIT_0_MESSAGE		(0x00)
+#define W1_UART_WRITE_BIT_1_MESSAGE		(0xFF)
+
+/**  */
+#define LOW_UART_BAUDRATE_MAX_ERROR      (3)
+
+//
+// Private Types
+//
+
+/**  */
+struct low_level_service {
+	int (*init)(void);
+	int (*set_baudrate)(uint32_t);
+	uint8_t (*wr_rd)(uint8_t);
+};
+
+//
+// Private Services
+//
+
+/**
+ *
+ * @param f_cpu
+ * @param baudrate
+ * @param ubrr
+ * @param u2x
+ * @return
+ */
+static int low_uart_calc_baudrate(uint32_t f_cpu, uint32_t baudrate,
+		uint16_t *ubrr, uint8_t *u2x) {
+#define UBRR_VALUE_MAX	(0xFFF)
+#define UBRR_MASK		(0xFFF)
+	uint32_t baudrate_real, baudrate_error;
+	uint16_t _ubrr, _u2x;
+	_ubrr = (f_cpu / (16 * baudrate)) - 1;
+	_u2x = 0;
+
+	baudrate_real = f_cpu / (16 * (_ubrr + 1));
+	baudrate_error = (labs(baudrate_real - baudrate) * 100) / baudrate;
+	if ((_ubrr > UBRR_VALUE_MAX)
+			|| (baudrate_error >= LOW_UART_BAUDRATE_MAX_ERROR)) {
+		_ubrr = (f_cpu / (8 * baudrate)) - 1;
+		_u2x = 1;
+		baudrate_real = f_cpu / (8 * (_ubrr + 1));
+		baudrate_error = (labs(baudrate_real - baudrate) * 100) / baudrate;
+		if ((_ubrr > 0xFFF)
+				|| (baudrate_error >= LOW_UART_BAUDRATE_MAX_ERROR)) {
+			/*printf(
+			 "w1_uart_calc_baudrate() : baudrate setting FAIL (UBRR=0x%08X; U2X=%d; baudrate=%l; real baudrate=%l; error=%l)\n\r",
+			 _ubrr, _u2x, baudrate, baudrate_real, baudrate_error);*/
+			return -1;
+		}
+	}
+	*ubrr = _ubrr & UBRR_MASK;
+	*u2x = _u2x;
+
+	return 0;
+}
+
+#define LOW_UART_WR_RD(port) \
+static uint8_t low_uart##port##_wr_rd(uint8_t wr) \
+{ \
+	UDR##port = wr; \
+	while ((UCSR##port##A & (1 << TXC##port)) == 0); \
+	UCSR##port##A |= (1 << TXC##port); /* Clear TXCn flag in register UCSRnA */ \
+	while ((UCSR##port##A & (1 << RXC##port)) == 0); \
+	return UDR##port; \
+}
+
+#define LOW_UART_SET_BAUDRATE(port) \
+static int low_uart##port##_set_baudrate(uint32_t baudrate) \
+{ \
+	uint16_t ubrr; \
+	uint8_t u2x; \
+\
+	if (low_uart_calc_baudrate(BOARD_CPU_CLOCK, baudrate, &ubrr, &u2x) != 0) \
+		return -1; \
+\
+	UBRR##port##H = (ubrr >> 8) & 0xFF; \
+	UBRR##port##L = (ubrr >> 0) & 0xFF; \
+	if (u2x) \
+		UCSR##port##A |= (1 << U2X##port); \
+	else \
+		UCSR##port##A &= ~(1 << U2X##port); \
+\
+	return 0; \
+}
+
+#define LOW_UART_INIT(port) \
+static int low_uart##port##_init(void) \
+{ \
+	power_usart##port##_enable(); \
+\
+	UCSR##port##A = 0x00; \
+	UCSR##port##B = 0x00; \
+	UCSR##port##C = (BIT_UCSRC_SEL | (1 << UCSZ##port##1) | (1 << UCSZ##port##0)); /* No parity / 1 stop bit / 8 bit */ \
+	UBRR##port##H = 0x00; \
+	UBRR##port##L = 0x00; \
+\
+	/* Clear all flags */ \
+	UCSR##port##A = ((1 << RXC##port) | (1 << TXC##port) | (1 << UDRE##port) | (1 << FE##port) \
+			| (1 << DOR##port) | (1 << UPE##port)); \
+\
+	/* Enable receiver and transmitter */ \
+	UCSR##port##B |= ((1 << RXEN##port) | (1 << TXEN##port)); \
+\
+	return 0; \
+}
+
+#ifdef UCSRA
+#define BIT_UCSRC_SEL (1 << URSEL)
+LOW_UART_INIT()
+LOW_UART_WR_RD()
+LOW_UART_SET_BAUDRATE()
+#else
+#define BIT_UCSRC_SEL (0)
+#ifdef UCSR0A
+LOW_UART_INIT(0)
+LOW_UART_WR_RD(0)
+LOW_UART_SET_BAUDRATE(0)
+#endif
+#ifdef UCSR1A
+LOW_UART_INIT(1)
+LOW_UART_WR_RD(1)
+LOW_UART_SET_BAUDRATE(1)
+#endif
+#ifdef UCSR2A
+LOW_UART_INIT(2)
+LOW_UART_WR_RD(2)
+LOW_UART_SET_BAUDRATE(2)
+#endif
+#ifdef UCSR3A
+LOW_UART_INIT(3)
+LOW_UART_WR_RD(3)
+LOW_UART_SET_BAUDRATE(3)
+#endif
+#endif
+
+const static struct low_level_service low_level_service[] = {
+#ifdef UCSRA
+		{
+			low_uart_init,
+			low_uart_set_baudrate,
+			low_uart_wr_rd,
+		},
+#else
+#ifdef UCSR0A
+		{
+			low_uart0_init,
+			low_uart0_set_baudrate,
+			low_uart0_wr_rd,
+		},
+#endif
+#ifdef UCSR1A
+		{
+			low_uart1_init,
+			low_uart1_set_baudrate,
+			low_uart1_wr_rd,
+		},
+#endif
+#ifdef UCSR2A
+		{
+			low_uart2_init,
+			low_uart2_set_baudrate,
+			low_uart2_wr_rd,
+		},
+#endif
+#ifdef UCSR3A
+		{
+			low_uart3_init,
+			low_uart3_set_baudrate,
+			low_uart3_wr_rd,
+		},
+#endif
+#endif
+	};
+
+static inline int w1_uart_init(int port)
+{
+	return low_level_service[port].init();
+}
+
+static inline int w1_uart_set_baudrate(int port, uint32_t baudrate)
+{
+	return low_level_service[port].set_baudrate(baudrate);
+}
+
+static inline uint8_t w1_uart_wr_rd(int port, uint8_t wr)
+{
+	return low_level_service[port].wr_rd(wr);
+}
+
+static int w1_uart_reset(void *par) {
+	int port = (int) par;
+	uint8_t rd;
+
+	w1_uart_set_baudrate(port, 9600);
+
+	rd = w1_uart_wr_rd(port, W1_UART_RESET_MESSAGE);
+
+	w1_uart_set_baudrate(port, 115200);
+	printf("rd=%X\n", rd);
+	if (rd == W1_UART_RESET_MESSAGE)
+		return -1;
+
+	return 0;
+}
+
+static int w1_uart_read_bit(void *par, uint8_t *b) {
+
+	int port = (int) par;
+	uint8_t rd;
+
+	rd = w1_uart_wr_rd(port, W1_UART_READ_BIT_MESSAGE);
+	if (rd != W1_UART_READ_BIT_MESSAGE)
+		*b = 0;
+	else
+		*b = 1;
+
+	return 0;
+}
+
+static int w1_uart_write_bit(void *par, uint8_t b) {
+	int port = (int) par;
+	uint8_t rd;
+
+	if (b)
+		b = W1_UART_WRITE_BIT_1_MESSAGE;
+	else
+		b = W1_UART_WRITE_BIT_0_MESSAGE;
+
+	rd = w1_uart_wr_rd(port, b);
+	if (rd != b)
+		return -1;
+
+	return 0;
+}
+
+struct w1_dev_s *up_w1_uart_create(int port) {
+	struct w1_dev_s *dev;
+
+	dev = kmm_zalloc(sizeof(struct w1_dev_s));
+	if (dev == NULL) {
+
+		return NULL;
+	}
+
+	w1_uart_init(port);
+
+	dev->arg = (void*) port;
+	dev->reset = w1_uart_reset;
+	dev->read_bit = w1_uart_read_bit;
+	dev->write_bit = w1_uart_write_bit;
+
+	return dev;
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/configs/moteino-mega/nsh/defconfig src/nuttx/configs/moteino-mega/nsh/defconfig
--- tmp/nuttx/configs/moteino-mega/nsh/defconfig	2015-04-28 10:43:44.415540856 +0300
+++ src/nuttx/configs/moteino-mega/nsh/defconfig	2015-04-29 11:32:05.641869158 +0300
@@ -16,7 +16,8 @@ CONFIG_HOST_OSX=y
 #
 # Build Configuration
 #
-# CONFIG_APPS_DIR="../apps"
+CONFIG_APPS_DIR="../apps"
+CONFIG_BUILD_FLAT=y
 # CONFIG_BUILD_2PASS is not set
 
 #
@@ -41,8 +42,9 @@ CONFIG_INTELHEX_BINARY=y
 # Debug Options
 #
 # CONFIG_DEBUG is not set
-CONFIG_ARCH_HAVE_STACKCHECK=y
 # CONFIG_ARCH_HAVE_HEAPCHECK is not set
+CONFIG_ARCH_HAVE_STACKCHECK=y
+# CONFIG_STACK_COLORATION is not set
 # CONFIG_DEBUG_SYMBOLS is not set
 CONFIG_ARCH_HAVE_CUSTOMOPT=y
 # CONFIG_DEBUG_NOOPT is not set
@@ -156,6 +158,7 @@ CONFIG_NSH_MMCSDMINOR=0
 #
 # Board-Specific Options
 #
+# CONFIG_LIB_BOARDCTL is not set
 
 #
 # RTOS Features
@@ -216,7 +219,8 @@ CONFIG_NAME_MAX=32
 #
 # RTOS hooks
 #
-# CONFIG_BOARD_INITIALIZE is not set
+CONFIG_BOARD_INITIALIZE=y
+# CONFIG_BOARD_INITTHREAD is not set
 # CONFIG_SCHED_STARTHOOK is not set
 # CONFIG_SCHED_ATEXIT is not set
 # CONFIG_SCHED_ONEXIT is not set
@@ -231,6 +235,9 @@ CONFIG_SIG_SIGALARM=3
 #
 # Work Queue Support
 #
+# CONFIG_SCHED_WORKQUEUE is not set
+# CONFIG_SCHED_HPWORK is not set
+# CONFIG_SCHED_LPWORK is not set
 
 #
 # Stack and heap information
@@ -262,9 +269,13 @@ CONFIG_DEV_NULL=y
 # CONFIG_I2C is not set
 # CONFIG_SPI is not set
 # CONFIG_I2S is not set
+
+#
+# Timer Driver Support
+#
+# CONFIG_TIMER is not set
 # CONFIG_RTC is not set
 # CONFIG_WATCHDOG is not set
-# CONFIG_TIMER is not set
 # CONFIG_ANALOG is not set
 # CONFIG_AUDIO_DEVICES is not set
 # CONFIG_VIDEO_DEVICES is not set
@@ -331,6 +342,12 @@ CONFIG_USART0_2STOP=0
 # CONFIG_USART0_OFLOWCONTROL is not set
 # CONFIG_USBDEV is not set
 # CONFIG_USBHOST is not set
+CONFIG_W1=y
+# CONFIG_W1_DS1822 is not set
+# CONFIG_W1_DS18B20 is not set
+# CONFIG_W1_DS18S20 is not set
+# CONFIG_W1_DS1990 is not set
+# CONFIG_W1_DS2431 is not set
 # CONFIG_WIRELESS is not set
 
 #
@@ -341,6 +358,7 @@ CONFIG_USART0_2STOP=0
 # System Logging
 #
 # CONFIG_RAMLOG is not set
+# CONFIG_SYSLOG_CONSOLE is not set
 
 #
 # Networking Support
@@ -367,6 +385,7 @@ CONFIG_DISABLE_PSEUDOFS_OPERATIONS=y
 # CONFIG_FS_WRITABLE is not set
 # CONFIG_FS_NAMED_SEMAPHORES is not set
 # CONFIG_FS_RAMMAP is not set
+# CONFIG_FS_BINFS is not set
 # CONFIG_FS_PROCFS is not set
 
 #
@@ -397,9 +416,10 @@ CONFIG_MM_REGIONS=1
 # Binary Loader
 #
 # CONFIG_BINFMT_DISABLE is not set
+# CONFIG_BINFMT_EXEPATH is not set
 # CONFIG_NXFLAT is not set
 # CONFIG_ELF is not set
-# CONFIG_BUILTIN is not set
+CONFIG_BUILTIN=y
 # CONFIG_PIC is not set
 # CONFIG_SYMTAB_ORDEREDBYNAME is not set
 
@@ -430,6 +450,7 @@ CONFIG_TASK_SPAWN_DEFAULT_STACKSIZE=2048
 # CONFIG_LIBC_PERROR_STDOUT is not set
 CONFIG_ARCH_LOWPUTC=y
 # CONFIG_LIBC_LOCALTIME is not set
+# CONFIG_TIME_EXTENDED is not set
 CONFIG_LIB_SENDFILE_BUFSIZE=512
 # CONFIG_ARCH_ROMGETC is not set
 # CONFIG_ARCH_OPTIMIZED_FUNCTIONS is not set
@@ -453,6 +474,7 @@ CONFIG_LIB_SENDFILE_BUFSIZE=512
 #
 # Built-In Applications
 #
+CONFIG_BUILTIN_PROXY_STACKSIZE=1024
 
 #
 # Examples
@@ -487,8 +509,9 @@ CONFIG_EXAMPLES_NSH=y
 # CONFIG_EXAMPLES_NXTEXT is not set
 # CONFIG_EXAMPLES_OSTEST is not set
 # CONFIG_EXAMPLES_PIPE is not set
-# CONFIG_EXAMPLES_POLL is not set
+# CONFIG_EXAMPLES_PPPD is not set
 # CONFIG_EXAMPLES_POSIXSPAWN is not set
+CONFIG_EXAMPLES_PROMETHEUS=y
 # CONFIG_EXAMPLES_QENCODER is not set
 # CONFIG_EXAMPLES_RGMP is not set
 # CONFIG_EXAMPLES_ROMFS is not set
@@ -497,13 +520,13 @@ CONFIG_EXAMPLES_NSH=y
 # CONFIG_EXAMPLES_SERIALRX is not set
 # CONFIG_EXAMPLES_SERLOOP is not set
 # CONFIG_EXAMPLES_SLCD is not set
+# CONFIG_EXAMPLES_SMART_TEST is not set
 # CONFIG_EXAMPLES_SMART is not set
 # CONFIG_EXAMPLES_TCPECHO is not set
 # CONFIG_EXAMPLES_TELNETD is not set
 # CONFIG_EXAMPLES_THTTPD is not set
 # CONFIG_EXAMPLES_TIFF is not set
 # CONFIG_EXAMPLES_TOUCHSCREEN is not set
-# CONFIG_EXAMPLES_UDP is not set
 # CONFIG_EXAMPLES_WEBSERVER is not set
 # CONFIG_EXAMPLES_USBSERIAL is not set
 # CONFIG_EXAMPLES_USBTERM is not set
@@ -530,15 +553,11 @@ CONFIG_EXAMPLES_NSH=y
 # Networking Utilities
 #
 # CONFIG_NETUTILS_CODECS is not set
-# CONFIG_NETUTILS_DHCPD is not set
 # CONFIG_NETUTILS_FTPC is not set
-# CONFIG_NETUTILS_FTPD is not set
 # CONFIG_NETUTILS_JSON is not set
 # CONFIG_NETUTILS_SMTP is not set
-# CONFIG_NETUTILS_TFTPC is not set
 # CONFIG_NETUTILS_THTTPD is not set
-# CONFIG_NETUTILS_NETLIB is not set
-# CONFIG_NETUTILS_WEBCLIENT is not set
+# CONFIG_NETUTILS_PPPD is not set
 
 #
 # FreeModBus
@@ -561,6 +580,7 @@ CONFIG_NSH_MAXARGUMENTS=6
 # CONFIG_NSH_ARGCAT is not set
 CONFIG_NSH_NESTDEPTH=3
 # CONFIG_NSH_DISABLEBG is not set
+CONFIG_NSH_BUILTIN_APPS=y
 
 #
 # Disable Individual commands
@@ -570,6 +590,7 @@ CONFIG_NSH_DISABLE_ADDROUTE=y
 # CONFIG_NSH_DISABLE_CD is not set
 # CONFIG_NSH_DISABLE_CP is not set
 CONFIG_NSH_DISABLE_CMP=y
+CONFIG_NSH_DISABLE_DATE=y
 CONFIG_NSH_DISABLE_DD=y
 CONFIG_NSH_DISABLE_DF=y
 CONFIG_NSH_DISABLE_DELROUTE=y
@@ -590,6 +611,7 @@ CONFIG_NSH_DISABLE_MKFIFO=y
 CONFIG_NSH_DISABLE_MKRD=y
 # CONFIG_NSH_DISABLE_MH is not set
 # CONFIG_NSH_DISABLE_MOUNT is not set
+# CONFIG_NSH_DISABLE_MV is not set
 # CONFIG_NSH_DISABLE_MW is not set
 # CONFIG_NSH_DISABLE_PS is not set
 CONFIG_NSH_DISABLE_PUT=y
@@ -636,123 +658,19 @@ CONFIG_NSH_CONSOLE=y
 #
 # System Libraries and NSH Add-Ons
 #
-
-#
-# Custom Free Memory Command
-#
 # CONFIG_SYSTEM_FREE is not set
-
-#
-# EMACS-like Command Line Editor
-#
 # CONFIG_SYSTEM_CLE is not set
-
-#
-# CU Minimal Terminal
-#
 # CONFIG_SYSTEM_CUTERM is not set
-
-#
-# FLASH Program Installation
-#
 # CONFIG_SYSTEM_INSTALL is not set
-
-#
-# FLASH Erase-all Command
-#
-
-#
-# Intel HEX to binary conversion
-#
 # CONFIG_SYSTEM_HEX2BIN is not set
-
-#
-# I2C tool
-#
-
-#
-# INI File Parser
-#
 # CONFIG_SYSTEM_INIFILE is not set
-
-#
-# NxPlayer media player library / command Line
-#
-
-#
-# RAM test
-#
 # CONFIG_SYSTEM_RAMTEST is not set
-
-#
-# readline()
-#
 CONFIG_SYSTEM_READLINE=y
 CONFIG_READLINE_ECHO=y
-
-#
-# P-Code Support
-#
-
-#
-# PHY Tool
-#
-
-#
-# Power Off
-#
 # CONFIG_SYSTEM_POWEROFF is not set
-
-#
-# RAMTRON
-#
 # CONFIG_SYSTEM_RAMTRON is not set
-
-#
-# SD Card
-#
 # CONFIG_SYSTEM_SDCARD is not set
-
-#
-# Sudoku
-#
 # CONFIG_SYSTEM_SUDOKU is not set
-
-#
-# Sysinfo
-#
 # CONFIG_SYSTEM_SYSINFO is not set
-
-#
-# Temperature
-#
-
-#
-# VI Work-Alike Editor
-#
 # CONFIG_SYSTEM_VI is not set
-
-#
-# Stack Monitor
-#
-
-#
-# USB CDC/ACM Device Commands
-#
-
-#
-# USB Composite Device Commands
-#
-
-#
-# USB Mass Storage Device Commands
-#
-
-#
-# USB Monitor
-#
-
-#
-# Zmodem Commands
-#
 # CONFIG_SYSTEM_ZMODEM is not set
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/configs/moteino-mega/src/avr_boot.c src/nuttx/configs/moteino-mega/src/avr_boot.c
--- tmp/nuttx/configs/moteino-mega/src/avr_boot.c	2015-04-28 10:43:44.419540859 +0300
+++ src/nuttx/configs/moteino-mega/src/avr_boot.c	2015-04-29 16:04:52.378547862 +0300
@@ -42,6 +42,8 @@
 #include <debug.h>
 
 #include <arch/board/board.h>
+#include <nuttx/w1/w1.h>
+#include <stdio.h>
 
 #include "up_arch.h"
 #include "up_internal.h"
@@ -90,3 +92,47 @@ void atmega_boardinitialize(void)
   atmega_ledinit();
 #endif
 }
+
+/****************************************************************************
+ * Name: board_initialize
+ *
+ * Description:
+ *   If CONFIG_BOARD_INITIALIZE is selected, then an additional
+ *   initialization call will be performed in the boot-up sequence to a
+ *   function called board_initialize().  board_initialize() will be
+ *   called immediately after up_intiialize() is called and just before the
+ *   initial application is started.  This additional initialization phase
+ *   may be used, for example, to initialize board-specific device drivers.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_BOARD_INITIALIZE
+void board_initialize(void)
+{
+  /* Perform NSH initialization here instead of from the NSH.  This
+   * alternative NSH initialization is necessary when NSH is ran in user-space
+   * but the initialization function must run in kernel space.
+   */
+
+//#if defined(CONFIG_NSH_LIBRARY) && !defined(CONFIG_NSH_ARCHINIT)
+//  (void)board_app_initialize();
+//#endif
+  struct w1_dev_s *dev;
+
+  printf("Create W1 device : ");
+  if ((dev = up_w1_uart_create(1)) == NULL)
+  {
+    printf("FAIL\n");
+    return;
+  }
+  printf("OK 0x%04X\n", (int) dev);
+
+  printf("Register W1 bus  : ");
+  if (w1_initialize(dev, 1))
+  {
+	  printf("FAIL\n");
+      return;
+  }
+  printf("OK\n");
+}
+#endif
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/Kconfig src/nuttx/drivers/Kconfig
--- tmp/nuttx/drivers/Kconfig	2015-04-28 10:43:44.615541026 +0300
+++ src/nuttx/drivers/Kconfig	2015-04-28 14:03:49.466275638 +0300
@@ -450,6 +450,16 @@ if USBHOST
 source drivers/usbhost/Kconfig
 endif # USBHOST
 
+menuconfig W1
+	bool "Maxim/Dallas 1-Wire Devices Support"
+	default n
+	---help---
+		Drivers for various 1-Wire devices.
+
+if W1
+source drivers/w1/Kconfig
+endif # W1
+
 menuconfig WIRELESS
 	bool "Wireless Device Support"
 	default n
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/Makefile src/nuttx/drivers/Makefile
--- tmp/nuttx/drivers/Makefile	2015-04-28 10:43:44.615541026 +0300
+++ src/nuttx/drivers/Makefile	2015-04-29 11:33:32.994799802 +0300
@@ -69,6 +69,7 @@ include timers$(DELIM)Make.defs
 include usbdev$(DELIM)Make.defs
 include usbhost$(DELIM)Make.defs
 include video$(DELIM)Make.defs
+include w1$(DELIM)Make.defs
 include wireless$(DELIM)Make.defs
 
 ifneq ($(CONFIG_NFILE_DESCRIPTORS),0)
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/ds18b20.c src/nuttx/drivers/w1/ds18b20.c
--- tmp/nuttx/drivers/w1/ds18b20.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/ds18b20.c	2015-04-30 16:29:50.761653768 +0300
@@ -0,0 +1,101 @@
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdio.h>
+#include <errno.h>
+
+#include <nuttx/fs/fs.h>
+#include <nuttx/w1/w1.h>
+
+#include "w1_core.h"
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Types
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Function Prototypes
+ ****************************************************************************/
+
+static int ds18b20_ioctl(FAR struct file *filep, int cmd, unsigned long arg);
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+
+/* Driver operations */
+static const struct file_operations g_ds18b20_fops = {
+NULL, /* open */
+NULL, /* close */
+ds18b20_read, /* read */
+NULL, /* write */
+NULL, /* seek */
+ds18b20_ioctl /* ioctl */
+#ifndef CONFIG_DISABLE_POLL
+		, 0 /* poll */
+#endif
+		};
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+static ssize_t ds18b20_read(FAR struct file *filep, FAR char *buffer,
+		size_t buflen) {
+
+	FAR struct w1_dev_priv_s *dev =
+			(FAR struct w1_dev_priv_s*) filep->f_inode->i_private;
+
+	dev->bus->lock(dev->bus);
+
+	if (w1_core_reset(dev->bus)) {
+		return 0;
+	}
+
+
+
+	dev->bus->unlock(dev->bus);
+
+	return 0;
+}
+
+static int ds18b20_ioctl(FAR struct file *filep, int cmd, unsigned long arg) {
+	return 0;
+}
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+int ds18b20_register(FAR const char *path, FAR const struct w1_rom_code_s* rom,
+		FAR const struct w1_bus_priv_s* bus) {
+	char name[64];
+	FAR struct w1_dev_priv_s *dev;
+	int res;
+
+	snprintf((FAR char*) &name, sizeof(name), "%sds18b20_%016llX", path,
+			(unsigned long long) (rom->rom));
+
+	dev = kmm_zalloc(sizeof(*dev));
+	if (dev == NULL) {
+		return -ENOMEM;
+	}
+
+	dev->bus = bus;
+	dev->rom = *rom;
+
+	res = register_driver((FAR const char*) &name, NULL, 0, (FAR void*) dev);
+	if (res != 0) {
+		kmm_free(dev);
+		return res;
+	}
+
+	return res;
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/Kconfig src/nuttx/drivers/w1/Kconfig
--- tmp/nuttx/drivers/w1/Kconfig	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/Kconfig	2015-04-29 11:24:33.752959089 +0300
@@ -0,0 +1,43 @@
+#
+# For a description of the syntax of this configuration file,
+# see misc/tools/kconfig-language.txt.
+#
+
+if W1
+
+config W1_DS1822
+	bool "DS1822 Econo 1-Wire Digital Thermometer"
+	default n
+	---help---
+		This selection enables support for the DS1822 -
+		econo 1-Wire digital thermometer.
+
+config W1_DS18B20
+	bool "DS18B20 Programmable Resolution 1-Wire Digital Thermometer"
+	default n
+	---help---
+		This selection enables support for the DS18B20 -
+		programmable resolution 1-Wire digital thermometer.
+
+config W1_DS18S20
+	bool "DS18S20 High-Precision 1-Wire Digital Thermometer"
+	default n
+	---help---
+		This selection enables support for the DS18S20 -
+		high-precision 1-Wire digital thermometer.
+
+config W1_DS1990
+	bool "DS1990(A) Serial Number iButton"
+	default n
+	---help---
+		This selection enables support for the DS1990(A) -
+		serial number iButton.
+
+config W1_DS2431
+	bool "DS2431 1024-Bit, 1-Wire EEPROM"
+	default n
+	---help---
+		This selection enables support for the DS2431 -
+		1024-bit, 1-Wire EEPROM.
+
+endif # W1
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/Make.defs src/nuttx/drivers/w1/Make.defs
--- tmp/nuttx/drivers/w1/Make.defs	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/Make.defs	2015-04-30 11:44:08.218738160 +0300
@@ -0,0 +1,68 @@
+############################################################################
+# drivers/w1/Make.defs
+#
+#   Copyright (C) 2015 Gregory Nutt. All rights reserved.
+#   Author: Gregory Nutt <gnutt@nuttx.org>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+# Include W1 support
+
+ifeq ($(CONFIG_W1),y)
+
+# Include the Maxim/Dallas 1-Wire drivers
+
+CSRCS += w1.c w1_core.c w1_devices.c
+
+ifeq ($(CONFIG_W1_DS1822),y)
+CSRCS += ds1822.c
+endif
+
+ifeq ($(CONFIG_W1_DS18B20),y)
+CSRCS += ds18b20.c
+endif
+
+ifeq ($(CONFIG_W1_DS18S20),y)
+CSRCS += ds18s20.c
+endif
+
+ifeq ($(CONFIG_W1_DS1990),y)
+CSRCS += ds1990.c
+endif
+
+ifeq ($(CONFIG_W1_DS2431),y)
+CSRCS += ds2431.c
+endif
+
+# Include build support
+
+DEPPATH += --dep-path w1
+VPATH += :w1
+endif
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1.c src/nuttx/drivers/w1/w1.c
--- tmp/nuttx/drivers/w1/w1.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1.c	2015-04-30 16:45:30.994372469 +0300
@@ -0,0 +1,186 @@
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdio.h>
+#include <errno.h>
+#include <unistd.h>
+
+#include <dirent.h>
+#include <semaphore.h>
+
+#include <nuttx/kmalloc.h>
+#include <nuttx/fs/fs.h>
+#include <nuttx/w1/w1.h>
+
+#include "w1_core.h"
+#include "w1_devices.h"
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+#define W1_BUS		"bus"
+#define W1_PATH		"/dev/w1-%d/"
+
+/****************************************************************************
+ * Private Types
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Function Prototypes
+ ****************************************************************************/
+
+static int w1_bus_ioctl(FAR struct file *filep, int cmd, unsigned long arg);
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+
+/* Driver operations */
+static const struct file_operations g_w1_fops = {
+NULL, /* open */
+NULL, /* close */
+NULL, /* read */
+NULL, /* write */
+NULL, /* seek */
+w1_bus_ioctl /* ioctl */
+#ifndef CONFIG_DISABLE_POLL
+		, 0 /* poll */
+#endif
+};
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+static void w1_bus_lock(FAR struct w1_bus_priv_s *bus) {
+	/* Take the semaphore (perhaps waiting) */
+
+	while (sem_wait(&bus->sem) != 0) {
+		/* The only case that an error should occur here is if
+		 * the wait was awakened by a signal.
+		 */
+
+		ASSERT(errno == EINTR);
+	}
+}
+
+static void w1_bus_unlock(FAR struct w1_bus_priv_s *bus) {
+	sem_post(&bus->sem);
+}
+
+static int w1_bus_read_rom(FAR struct w1_bus_priv_s *bus,
+		FAR struct w1_rom_code_s* rom) {
+	uint8_t cmd;
+
+	w1_bus_lock(bus);
+
+	if (w1_core_reset(bus) != 0) {
+		return -ENODEV;
+	}
+	cmd = W1_COMMAND_READ_ROM;
+	if (w1_core_write(bus, (FAR uint8_t*) &cmd, sizeof(cmd)) != sizeof(cmd))
+		return -EIO;
+
+	if (w1_core_read(bus, (FAR uint8_t*) rom, sizeof(*rom)) != sizeof(*rom))
+		return -EIO;
+
+	w1_bus_unlock(bus);
+
+	return 0;
+}
+
+static int w1_bus_send_command(FAR struct w1_bus_priv_s *bus, uint8_t cmd) {
+	uint8_t tmp[2];
+
+	if (w1_core_reset(bus) != 0) {
+		return -ENODEV;
+	}
+
+	tmp[0] = W1_COMMAND_SKIP_ROM;
+	tmp[1] = cmd;
+	if (w1_core_write(bus, (FAR uint8_t*) &tmp, sizeof(tmp)) != sizeof(tmp))
+		return -EIO;
+
+	return 0;
+}
+
+static int w1_bus_ioctl(FAR struct file *filep, int cmd, unsigned long arg) {
+	FAR struct w1_bus_priv_s *bus =
+			(FAR struct w1_bus_priv_s*) filep->f_inode->i_private;
+	struct w1_rom_code_s rom;
+	switch (cmd) {
+	case (SNIOC_W1_BUS_LOCK):
+		w1_bus_lock(bus);
+		return 0;
+	case (SNIOC_W1_BUS_UNLOCK):
+		w1_bus_unlock(bus);
+		return 0;
+	case (SNIOC_W1_BUS_READ_ROM):
+		w1_core_search_rom(bus, &rom);
+		return w1_bus_read_rom(bus, (FAR struct w1_rom_code_s*) arg);
+	case (SNIOC_W1_BUS_SEND_COMMAND):
+		return w1_bus_send_command(bus, (uint8_t) arg);
+	default:
+		break;
+	}
+
+	return -EINVAL;
+}
+
+static int w1_bus_search(FAR const char *path, FAR struct w1_bus_priv_s *bus) {
+	struct w1_rom_code_s rom;
+	int res = 0;
+
+	printf("search\n");
+	while (w1_core_search_rom(bus, &rom) == 0) {
+		printf("ROM : family=0x%02X serial=0x%012llX crc=0x%02X rom=0x%16llX\n",
+				rom.family_code, rom.serial_number, rom.crc, rom.rom);
+		res = w1_devices_register(path, &rom, bus);
+		if (res != 0)
+			return res;
+	}
+
+	return res;
+}
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+int w1_initialize(FAR struct w1_dev_s *dev, int minor) {
+	char path[16], name[16];
+	FAR struct w1_bus_priv_s *bus;
+	int res;
+
+	snprintf((FAR char*) &path, sizeof(path), W1_PATH, minor);
+	snprintf((FAR char*) &name, sizeof(path), W1_PATH W1_BUS, minor);
+
+	bus = kmm_zalloc(sizeof(*bus));
+	if (bus == NULL) {
+		return -ENOMEM;
+	}
+
+	w1_core_init(bus);
+	bus->dev = dev;
+	bus->lock = w1_bus_lock;
+	bus->unlock = w1_bus_unlock;
+	sem_init(&bus->sem, 0, 1);
+
+	res = register_driver((FAR const char*) &name, &g_w1_fops, 0,
+			(FAR void*) bus);
+	if (res != 0) {
+		kmm_free(bus);
+		return res;
+	}
+
+	res = w1_bus_search((FAR const char*) &path, bus);
+	if (res != 0) {
+		return res;
+	}
+
+	return res;
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1_common.c src/nuttx/drivers/w1/w1_common.c
--- tmp/nuttx/drivers/w1/w1_common.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1_common.c	2015-04-30 16:44:18.353697249 +0300
@@ -0,0 +1,5 @@
+
+int w1_common_select(bus, FAR struct w1_rom_code_s *rom)
+{
+
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1_core.c src/nuttx/drivers/w1/w1_core.c
--- tmp/nuttx/drivers/w1/w1_core.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1_core.c	2015-04-30 15:48:01.969811671 +0300
@@ -0,0 +1,245 @@
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <stdint.h>
+#include <stddef.h>
+#include <stdbool.h>
+
+#include <nuttx/arch.h>
+#include <nuttx/w1/w1.h>
+
+#include "w1_core.h"
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+#define BITS_IN_BYTE			(8)
+#define LSB_BIT_IN_BYTE			(1 << 0)
+#define MSB_BIT_IN_BYTE			(1 << (BITS_IN_BYTE - 1))
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+static inline int w1_core_read_bit(FAR const struct w1_bus_priv_s *bus, FAR uint8_t *b) {
+	return bus->dev->read_bit(bus->dev->arg, b);
+}
+
+static inline int w1_core_write_bit(FAR const struct w1_bus_priv_s *bus, FAR uint8_t b) {
+	return bus->dev->write_bit(bus->dev->arg, b);
+}
+
+uint8_t TestBit(uint8_t *var, uint8_t bit_number) { //Ôóíêöèÿ TestBit() âîçâðàùàåò çíà÷åíèå áèòà bit_number â ïåðåìåííîé var.
+	register uint8_t temp, n, m;
+
+	n = (bit_number >> 3);
+	//Âûäåëÿåì òåñòèðóåìûé áàéò ïåðåìåííîé var.
+	temp = var[n];
+	//Âûäåëÿåì òåñòèðóåìûé áèò.
+	m = (1 << (bit_number & 0x07));
+	//Âîçâðàùàåì ðåçóëüòàò.
+	if (temp & m) {
+		return 1;
+	} else {
+		return 0;
+	}
+}
+
+void ChangeBit(uint8_t *var, uint8_t bit_number, uint8_t set_clear) { //Ôóíêöèÿ ChangeBit() èçìåíÿåò áèò ñ íîìåðîì bit_number â ïåðåìåííîé var â ñîñòîÿíèå set_clear.
+	register uint8_t temp, n, m;
+
+	n = (bit_number >> 3);
+	//Âûäåëÿåì èçìåíÿåìûé áàéò ïåðåìåííîé var.
+	temp = var[n];
+	//Âûäåëÿåì íîìåð èçìåíÿåìîãî áèòà â èçìåíÿåìîì áàéòå ñ èçâëå÷åíåì èç
+	//òàáëèöû MaskTable ìàñêè äëÿ èçìåíåíèÿ áèòà.
+	m = (1 << (bit_number & 0x07));
+	if (set_clear) {
+		temp |= m;
+	} else {
+		temp &= ~m;
+	}
+	var[n] = temp;
+}
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+#include <stdio.h>
+
+void w1_core_init(FAR struct w1_bus_priv_s *bus) {
+	bus->last_discrepancy = 0;
+	bus->flag_last_device = false;
+}
+
+int w1_core_reset(FAR const struct w1_bus_priv_s *bus) {
+	return bus->dev->reset(bus->dev->arg);
+}
+
+int w1_core_read(FAR const struct w1_bus_priv_s *bus, FAR uint8_t *buf,
+		size_t size) {
+	uint8_t b, tmp;
+	int s, i;
+
+	for (s = 0; s < size; s++) {
+		tmp = 0;
+		for (i = 0; i < BITS_IN_BYTE; i++) {
+			tmp >>= 1;
+			if (bus->dev->read_bit(bus->dev->arg, &b) != 0)
+				return s;
+			if (b)
+				tmp |= MSB_BIT_IN_BYTE;
+		}
+		buf[s] = tmp;
+	}
+
+	return s;
+}
+
+int w1_core_write(FAR const struct w1_bus_priv_s *bus, FAR const uint8_t *buf,
+		size_t size) {
+	uint8_t tmp;
+	int s, i;
+
+	for (s = 0; s < size; s++) {
+		tmp = buf[s];
+		for (i = 0; i < BITS_IN_BYTE; i++) {
+			if (bus->dev->write_bit(bus->dev->arg, tmp & LSB_BIT_IN_BYTE) != 0)
+				return s;
+			tmp >>= 1;
+		}
+	}
+
+	return s;
+}
+
+// 0 - все хорошо, имеются ещё устройства
+// -1 - всё плохо, поиск очередного устройства закончился ошибкой
+// 1 - все устройства найдены, поиск необходимо заканчивать
+int w1_core_search_rom(FAR struct w1_bus_priv_s *bus,
+		FAR struct w1_rom_code_s *rom) {
+	//http://pdfserv.maxim-ic.com/en/an/AN187.pdf
+	//Âîçâðàùàåìûé ðåçóëüòàò:
+	// 0    - íåâåðíûé êîä êîìàíäû (äîïóñòèìûå êîäû 0xF0 èëè 0xEC);
+	// 1    - èíèöèàëèçàöèÿ øèíû 1-Wire íå ïðîøëà;
+	// 2    - ïðèíÿòûé áèò è åãî äîïîëíåíèå îêàçàëèñü ðàâíû 1;
+	// 3    - êîíòðîëüíàÿ ñóììà â ïðèíÿòîì ïàêåòå íå âåðíà;
+	// 4    - íàéäåííîå â ïðåäûäóùåì ïîèñêå óñòðîéñâî ÿâëÿåòñÿ ïîñëåäíèì;
+	// 0xFE - óñòðîéñòâî íàéäåíî óñïåøíî (íà øèíå èìåþòñÿ íåîïîçíàííûå óñòðîéñòâà).
+	// 0xFF - óñòðîéñòâî íàéäåíî óñïåøíî (íà øèíå áîëüøå íå èìååòñÿ íåîïîçíàííûõ óñòðîéñòâ);
+	uint8_t id_bit_number = 0;
+	uint8_t last_zero = 0;
+	uint8_t id_bit, cmp_id_bit;
+	uint8_t search_direction;
+
+	if (bus->flag_last_device == false) {
+		printf("w1_core_search_rom\n");
+		if (w1_core_reset(bus) != 0) {
+			printf("1-Wire search : no devices\n");
+			bus->last_discrepancy = 0;
+			return -1;
+		}
+		// Issue the search command
+		uint8_t cmd = W1_COMMAND_SEARCH_ROM;
+		w1_core_write(bus, (FAR const uint8_t*) &cmd, sizeof(cmd));
+
+		// Loop to do the search
+		while (id_bit_number < 64) // Loop until through all ROM bytes 0-7
+		{
+
+			//printf("w1_core_read_bit\n");
+			// Read a bit and its complement
+			w1_core_read_bit(bus, (FAR uint8_t*) &id_bit);
+			w1_core_read_bit(bus, (FAR uint8_t*) &cmp_id_bit);
+
+			// Check for no devices on 1-Wire.
+			if ((id_bit == 1) && (cmp_id_bit == 1)) {
+				printf("1-Wire search : id_bit == cmp_id_bit == 1\n");
+				bus->last_discrepancy = 0;
+				return -1;
+			} else {
+				//All devices coupled have 0 or 1.
+				if (id_bit != cmp_id_bit) {
+					search_direction = id_bit;
+				} //Bit write value for search.
+				else { //id_bit == cmp_id_bit == 0
+					   //If this discrepancy if before the Last Discrepancy
+					   //on a previous next then pick the same as last time.
+					if (id_bit_number < bus->last_discrepancy) {
+						search_direction = TestBit((uint8_t*) rom,
+								id_bit_number);
+					} else {
+						search_direction = (id_bit_number
+								== bus->last_discrepancy);
+					} //If equal to last pick 1, if not then pick 0.
+					  //If 0 was picked then record its position in last_zero.
+					if (search_direction == 0) {
+						last_zero = id_bit_number;
+					}
+				}
+				//Set or clear the bit in the ROM byte rom_byte_number
+				//with mask rom_byte_mask.
+				ChangeBit((uint8_t*) rom, id_bit_number, search_direction);
+				//Serial number search direction write bit.
+				w1_core_write_bit(bus, search_direction);
+				//Increment the byte counter id_bit_number
+				//and shift the mask rom_byte_mask.
+				id_bit_number++;
+			}
+		}
+
+		if (w1_core_get_crc((FAR const uint8_t*) rom, sizeof(*rom) - 1)
+				== rom->crc) {
+			bus->last_discrepancy = last_zero;
+			if (bus->last_discrepancy == 0) {
+				bus->flag_last_device = true;
+				printf("OK!\n");
+			} else {
+				printf("go devices\n");
+			}
+		} else {
+			printf("bad crc\n");
+			bus->last_discrepancy = 0;
+			return -1;
+		}
+	} else {
+		bus->last_discrepancy = 0;
+		bus->flag_last_device = false;
+		return 1;
+	}
+
+	return 0;
+}
+
+uint8_t w1_core_get_crc(FAR const uint8_t *buf, size_t size) {
+	static const uint8_t crc_table[256]
+	ARCH_FLASH = {0, 94, 188, 226, 97, 63, 221, 131,
+		194, 156, 126, 32, 163, 253, 31, 65, 157, 195, 33, 127, 252, 162,
+		64, 30, 95, 1, 227, 189, 62, 96, 130, 220, 35, 125, 159, 193, 66,
+		28, 254, 160, 225, 191, 93, 3, 128, 222, 60, 98, 190, 224, 2, 92,
+		223, 129, 99, 61, 124, 34, 192, 158, 29, 67, 161, 255, 70, 24, 250,
+		164, 39, 121, 155, 197, 132, 218, 56, 102, 229, 187, 89, 7, 219,
+		133, 103, 57, 186, 228, 6, 88, 25, 71, 165, 251, 120, 38, 196, 154,
+		101, 59, 217, 135, 4, 90, 184, 230, 167, 249, 27, 69, 198, 152, 122,
+		36, 248, 166, 68, 26, 153, 199, 37, 123, 58, 100, 134, 216, 91, 5,
+		231, 185, 140, 210, 48, 110, 237, 179, 81, 15, 78, 16, 242, 172, 47,
+		113, 147, 205, 17, 79, 173, 243, 112, 46, 204, 146, 211, 141, 111,
+		49, 178, 236, 14, 80, 175, 241, 19, 77, 206, 144, 114, 44, 109, 51,
+		209, 143, 12, 82, 176, 238, 50, 108, 142, 208, 83, 13, 239, 177,
+		240, 174, 76, 18, 145, 207, 45, 115, 202, 148, 118, 40, 171, 245,
+		23, 73, 8, 86, 180, 234, 105, 55, 213, 139, 87, 9, 235, 181, 54,
+		104, 138, 212, 149, 203, 41, 119, 244, 170, 72, 22, 233, 183, 85,
+		11, 136, 214, 52, 106, 43, 117, 151, 201, 74, 20, 246, 168, 116, 42,
+		200, 150, 21, 75, 169, 247, 182, 232, 10, 84, 215, 137, 107, 53};
+
+	uint8_t crc = 0;
+
+	while (size--) {
+		crc = ARCH_FLASH_GET_UINT8(&crc_table[crc ^ *buf++]);
+	}
+
+	return crc;
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1_core.h src/nuttx/drivers/w1/w1_core.h
--- tmp/nuttx/drivers/w1/w1_core.h	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1_core.h	2015-04-30 16:16:26.258015431 +0300
@@ -0,0 +1,65 @@
+#ifndef __DRIVERS_W1_W1_CORE_H_
+#define __DRIVERS_W1_W1_CORE_H_
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <stdint.h>
+#include <stddef.h>
+#include <stdbool.h>
+
+#include <nuttx/w1/w1.h>
+
+/************************************************************************************
+ * Public Types
+ ************************************************************************************/
+
+/**  */
+struct w1_bus_priv_s {
+	struct w1_dev_s *dev;
+	sem_t sem;
+	void (*lock)(FAR struct w1_bus_priv_s *);
+	void (*unlock)(FAR struct w1_bus_priv_s *);
+	uint8_t last_discrepancy;
+	bool flag_last_device;
+};
+
+/**  */
+struct w1_dev_priv_s {
+	struct w1_bus_priv_s *bus;
+	struct w1_rom_code_s rom;
+};
+
+/****************************************************************************
+ * Public Function Prototypes
+ ****************************************************************************/
+
+#ifdef __cplusplus
+#define EXTERN extern "C"
+extern "C" {
+#else
+#define EXTERN extern
+#endif
+
+void w1_core_init(FAR struct w1_bus_priv_s *bus);
+
+int w1_core_reset(FAR const struct w1_bus_priv_s *bus);
+
+int w1_core_read(FAR const struct w1_bus_priv_s *bus, FAR uint8_t *buf,
+		size_t size);
+
+int w1_core_write(FAR const struct w1_bus_priv_s *bus, FAR const uint8_t *buf,
+		size_t size);
+
+int w1_core_search_rom(FAR struct w1_bus_priv_s *bus,
+		FAR struct w1_rom_code_s *rom);
+
+uint8_t w1_core_get_crc(FAR const uint8_t *buf, size_t size);
+
+#undef EXTERN
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __DRIVERS_W1_W1_CORE_H_ */
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1_devices.c src/nuttx/drivers/w1/w1_devices.c
--- tmp/nuttx/drivers/w1/w1_devices.c	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1_devices.c	2015-04-30 15:58:19.943774133 +0300
@@ -0,0 +1,80 @@
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdio.h>
+
+#include <nuttx/fs/fs.h>
+#include <nuttx/w1/w1.h>
+
+#include "w1_core.h"
+#include "w1_devices.h"
+/*#include <ds1822.h>
+ #include <ds18b20.h>
+ #include <ds18s20.h>
+ #include <ds1990.h>
+ #include <ds2431.h>*/
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Types
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+int w1_devices_register_unknown(FAR const char *path,
+		FAR const struct w1_rom_code_s* rom,
+		FAR const struct w1_bus_priv_s* bus) {
+	char name[64];
+
+	snprintf((FAR char*) &name, sizeof(name), "%sunknown_%016llX", path,
+			(unsigned long long) (rom->rom));
+
+	return register_driver((FAR const char*) &name, NULL, 0, NULL);
+}
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+int w1_devices_register(FAR const char *path,
+		FAR const struct w1_rom_code_s* rom,
+		FAR const struct w1_bus_priv_s* bus) {
+	switch (rom->family_code) {
+#ifdef CONFIG_W1_DS1822
+	case (W1_DEVICES_DS1822_FAMILY():
+			return ds1822_register(path, rom, bus);
+#endif
+#ifdef CONFIG_W1_DS18B20
+	case (W1_FAMILY_CODE_DS1822):
+	return ds18b20_register(path, rom, bus);
+#endif
+#ifdef CONFIG_W1_DS18S20
+	case (W1_FAMILY_CODE_DS18B20):
+	return ds18s20_register(path, rom, bus);
+#endif
+#ifdef CONFIG_W1_DS1990
+	case (W1_FAMILY_CODE_DS1990):
+	return ds1990_register(path, rom, bus);
+#endif
+#ifdef CONFIG_W1_DS2431
+	case (W1_FAMILY_CODE_DS2431):
+	return ds2431_register(path, rom, bus);
+#endif
+	default:
+		break;
+	}
+
+	return w1_devices_register_unknown(path, rom, bus);
+}
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/drivers/w1/w1_devices.h src/nuttx/drivers/w1/w1_devices.h
--- tmp/nuttx/drivers/w1/w1_devices.h	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/drivers/w1/w1_devices.h	2015-04-30 16:15:08.245276976 +0300
@@ -0,0 +1,30 @@
+#ifndef __DRIVERS_W1_W1_DEVICES_H_
+#define __DRIVERS_W1_W1_DEVICES_H_
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include "w1_core.h"
+
+/****************************************************************************
+ * Public Function Prototypes
+ ****************************************************************************/
+
+#ifdef __cplusplus
+#define EXTERN extern "C"
+extern "C" {
+#else
+#define EXTERN extern
+#endif
+
+int w1_devices_register(FAR const char *path,
+		FAR const struct w1_rom_code_s* rom,
+		FAR const struct w1_bus_priv_s* bus);
+
+#undef EXTERN
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __DRIVERS_W1_W1_DEVICES_H_ */
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/include/nuttx/w1/w1.h src/nuttx/include/nuttx/w1/w1.h
--- tmp/nuttx/include/nuttx/w1/w1.h	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/include/nuttx/w1/w1.h	2015-04-30 12:37:57.392069280 +0300
@@ -0,0 +1,181 @@
+#ifndef __INCLUDE_NUTTX_W1_W1_H
+#define __INCLUDE_NUTTX_W1_W1_H
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <stdint.h>
+
+#include <nuttx/compiler.h>
+#include <nuttx/fs/ioctl.h>
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+// Bus        ioctl(fd, SNIOC_W1_BUS_LOCK, NULL);
+#define SNIOC_W1_BUS_LOCK				_SNIOC(0x0001)
+
+// Bus        ioctl(fd, SNIOC_W1_BUS_UNLOCK, NULL);
+#define SNIOC_W1_BUS_UNLOCK				_SNIOC(0x0002)
+
+// Bus        ioctl(fd, SNIOC_W1_BUS_READ_ROM, (FAR struct w1_rom_code_s*) &rom);
+#define SNIOC_W1_BUS_READ_ROM			_SNIOC(0x0003)
+
+// Bus        ioctl(fd, SNIOC_W1_BUS_SEND_COMMAND, cmd);
+#define SNIOC_W1_BUS_SEND_COMMAND		_SNIOC(0x0004)
+
+// DS1822     ioctl(fd, SNIOC_W1_DEV_READ_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds1822*)   &spd);
+// DS18B20    ioctl(fd, SNIOC_W1_DEV_READ_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds18b20*)  &spd);
+// DS18S20    ioctl(fd, SNIOC_W1_DEV_READ_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds18s20*)  &spd);
+// MAX31826   ioctl(fd, SNIOC_W1_DEV_READ_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_max31826*) &spd);
+#define SNIOC_W1_DEV_READ_SCRATCHPAD1	_SNIOC(0x0005)
+
+// DS1822     ioctl(fd, SNIOC_W1_DEV_WRITE_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds1822*)   &spd); // fields: temp_alarm_high / temp_alarm_low / config_reg
+// DS18B20    ioctl(fd, SNIOC_W1_DEV_WRITE_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds18b20*)  &spd); // fields: temp_alarm_high / temp_alarm_low / config_reg
+// DS18S20    ioctl(fd, SNIOC_W1_DEV_WRITE_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_ds18s20*)  &spd); // fields: temp_alarm_high / temp_alarm_low
+// MAX31826   ioctl(fd, SNIOC_W1_DEV_WRITE_SCRATCHPAD1, (FAR struct w1_scratch_pad_1_max31826*) &spd); // No effect
+#define SNIOC_W1_DEV_WRITE_SCRATCHPAD1	_SNIOC(0x0006)
+
+// DS1822     ioctl(fd, SNIOC_W1_DEV_COPY_SCRATCHPAD1, NULL); // fields: temp_alarm_high / temp_alarm_low / config_reg
+// DS18B20    ioctl(fd, SNIOC_W1_DEV_COPY_SCRATCHPAD1, NULL); // fields: temp_alarm_high / temp_alarm_low / config_reg
+// DS18S20    ioctl(fd, SNIOC_W1_DEV_COPY_SCRATCHPAD1, NULL); // fields: temp_alarm_high / temp_alarm_low
+// MAX31826   ioctl(fd, SNIOC_W1_DEV_COPY_SCRATCHPAD1, NULL); // No effect
+#define SNIOC_W1_DEV_COPY_SCRATCHPAD1	_SNIOC(0x0007)
+
+// DS1822     ioctl(fd, SNIOC_W1_DEV_READ_TEMPERATURE, (FAR float*) &temp);
+// DS18B20    ioctl(fd, SNIOC_W1_DEV_READ_TEMPERATURE, (FAR float*) &temp);
+// DS18S20    ioctl(fd, SNIOC_W1_DEV_READ_TEMPERATURE, (FAR float*) &temp);
+// MAX31826   ioctl(fd, SNIOC_W1_DEV_READ_TEMPERATURE, (FAR float*) &temp);
+#define SNIOC_W1_DEV_READ_TEMPERATURE	_SNIOC(0x0008)
+
+/** 1-Wire devices commands definitions */
+#define W1_COMMAND_SEARCH_ROM			0xF0
+#define W1_COMMAND_READ_ROM				0x33
+#define W1_COMMAND_MATCH_ROM			0x55
+#define W1_COMMAND_SKIP_ROM				0xCC
+
+#define W1_READ_POWER_SUPPPLY			0xB4
+
+#define W1_COMMAND_READ_SCRATCHPAD1		0xBE
+#define W1_COMMAND_WRITE_SCRATCHPAD1	0x4E
+#define W1_COMMAND_COPY_SCRATCHPAD1		0x48
+#define W1_COMMAND_RECALL_E2			0xB8
+
+#define W1_COMMAND_READ_SCRATCHPAD2		0xAA
+#define W1_COMMAND_WRITE_SCRATCHPAD2	0x0F
+#define W1_COMMAND_COPY_SCRATCHPAD2		0x55
+
+#define W1_COMMAND_READ_MEMORY			0xF0
+
+#define W1_COMMAND_CONVERT_T			0x44
+
+/************************************************************************************
+ * Public Types
+ ************************************************************************************/
+
+/** 1-Wire family code enum type */
+enum w1_family_code_e {
+	W1_FAMILY_CODE_DS1822 = 0x22,
+	W1_FAMILY_CODE_DS18B20 = 0x28,
+	W1_FAMILY_CODE_DS18S20 = 0x10,
+	W1_FAMILY_CODE_DS1990 = 0x01,
+	W1_FAMILY_CODE_DS2431 = 0x2D,
+	W1_FAMILY_CODE_MAX31826 = 0x3B,
+};
+
+/** 1-Wire ROM code struct type */
+struct w1_rom_code_s {
+	union {
+		uint64_t rom;
+		struct {
+			uint64_t family_code :8;
+			uint64_t serial_number :48;
+			uint64_t crc :8;
+		};
+	};
+}packed_struct;
+
+/** 1-Wire low level transport services type */
+struct w1_dev_s {
+	void *arg;
+	int (*reset)(void*);
+
+	int (*read_bit)(void*, uint8_t*);
+	int (*write_bit)(void*, uint8_t);
+
+	int (*search)(void*, struct w1_rom_code_s*);
+
+	int (*set_pullup)(void*, int);
+};
+
+//
+// Scratch pads 1 structures for temperature sensors
+//
+
+struct w1_scratch_pad_1_ds1822 {
+	uint16_t temperature; //<
+	uint8_t temp_alarm_high;
+	uint8_t temp_alarm_low;
+	uint8_t config_reg;
+	uint8_t reserved5;
+	uint8_t reserved6;
+	uint8_t reserved7;
+	uint8_t crc;
+}packed_struct;
+
+struct w1_scratch_pad_1_ds18b20 {
+	uint16_t temperature; //<
+	uint8_t temp_alarm_high;
+	uint8_t temp_alarm_low;
+	uint8_t config_reg;
+	uint8_t reserved5;
+	uint8_t reserved6;
+	uint8_t reserved7;
+	uint8_t crc;
+}packed_struct;
+
+struct w1_scratch_pad_1_ds18s20 {
+	uint16_t temperature; //<
+	uint8_t temp_alarm_high;
+	uint8_t temp_alarm_low;
+	uint8_t reserved4;
+	uint8_t reserved5;
+	uint8_t count_remain;
+	uint8_t count_per_c;
+	uint8_t crc;
+}packed_struct;
+
+struct w1_scratch_pad_1_max31826 {
+	uint16_t temperature; //<
+	uint8_t reserved2;
+	uint8_t reserved3;
+	uint8_t config_reg;
+	uint8_t reserved5;
+	uint8_t reserved6;
+	uint8_t reserved7;
+	uint8_t crc;
+}packed_struct;
+
+/****************************************************************************
+ * Public Function Prototypes
+ ****************************************************************************/
+
+#ifdef __cplusplus
+#define EXTERN extern "C"
+extern "C" {
+#else
+#define EXTERN extern
+#endif
+
+struct w1_dev_s *up_w1_uart_create(int port);
+
+int w1_initialize(FAR struct w1_dev_s *dev, int minor);
+
+#undef EXTERN
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __INCLUDE_NUTTX_W1_W1_H */
diff -Nurp -x '*~' -x '*.orig' tmp/nuttx/.version src/nuttx/.version
--- tmp/nuttx/.version	1970-01-01 03:00:00.000000000 +0300
+++ src/nuttx/.version	2015-04-28 10:58:30.071341935 +0300
@@ -0,0 +1,6 @@
+#!/bin/bash
+
+CONFIG_VERSION_STRING="0.0"
+CONFIG_VERSION_MAJOR=0
+CONFIG_VERSION_MINOR=0
+CONFIG_VERSION_BUILD="0"
